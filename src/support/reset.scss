@mixin reset-export {
  :root {
    font-family: font(primary);
    font-size: font-size(base);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }


  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  html {
    box-sizing: border-box;
    font-family: font(primary);
    font-size: font-size(base);
    line-height: line-height(normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    font-family: font(primary);
    font-size: font-size(base);
    padding: 0;
    margin: 0;
    overflow-x: hidden;
    text-rendering: optimizeLegibility;
  }

  img {
    display: inline-block;
    max-width: 100%;
    height: auto;
    border: 0;
  }

  textarea {
    height: auto;
    min-height: 50px;
    overflow: auto;
  }

  select {
    width: 100%;
  }

  button {
    padding: 0;
    overflow: visible;
    line-height: 1;
    background: transparent;
    border: 0;
  }

  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  main,
  menu,
  nav,
  section,
  summary {
    display: block;
  }

  audio,
  canvas,
  progress,
  video {
    display: inline-block;
    vertical-align: baseline;
  }

  audio:not([controls]) {
    display: none;
    height: 0;
  }

  [hidden],
  template {
    display: none;
  }

  a {
    text-decoration: none;
    cursor: pointer;
    background-color: transparent;
  }

  a:active,
  a:hover {
    outline: 0;
  }

  abbr[title] {
    border-bottom: 1px dotted;
  }

  b,
  strong {
    @if variable-exists(text-strong) {
      font-weight: $text-strong;
    } @else {
      font-weight: bold;
    }
  }

  dfn {
    font-style: italic;
  }

  mark {
    color: #ffffff;
    background: #ffff00;
  }

  small {
    font-size: 80%;
  }

  sub,
  sup {
    position: relative;
    font-size: 75%;
    line-height: 0;
    vertical-align: baseline;
  }

  sup {
    top: -0.5em;
  }

  sub {
    bottom: -0.25em;
  }

  svg:not(:root) {
    overflow: hidden;
  }

  figure {
    margin: 1em 40px;
  }

  hr {
    box-sizing: content-box;
    height: 0;
  }

  pre {
    overflow: auto;
  }

  code,
  kbd,
  pre,
  samp {
    font-family: monospace;
    font-size: 1em;
  }

  button,
  input,
  optgroup,
  select,
  textarea {
    margin: 0;
    font: inherit;
    color: inherit;
  }

  button,
  select {
    text-transform: none;
  }

  button,
  html input[type="button"],
  input[type="reset"],
  input[type="submit"] {
    cursor: pointer;
    appearance: button;
  }

  button[disabled],
  html input[disabled] {
    cursor: not-allowed;
  }

  button::-moz-focus-inner,
  input::-moz-focus-inner {
    padding: 0;
    border: 0;
  }

  :focus {
    outline: none;
  }

  input {
    line-height: normal;
  }

  input[type="checkbox"],
  input[type="radio"] {
    box-sizing: border-box;
    padding: 0;
  }

  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  input[type="search"] {
    box-sizing: content-box;
    appearance: textfield;
  }

  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-decoration {
    appearance: none;
  }

  legend {
    padding: 0;
    border: 0;
  }

  optgroup {
    @if variable-exists(text-strong) {
      font-weight: $text-strong;
    } @else {
      font-weight: bold;
    }
  }

  table {
    border-spacing: 0;
    border-collapse: collapse;
  }

  td,
  th {
    padding: 0;
  }
}

@if $enable-reset = true {
  @include reset-export();
}

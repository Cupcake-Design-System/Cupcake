// Avatar
.c-avatar {
  @include avatar-base();

  img {
    $avi-img-box-shadow: 0 0 0 1px $color-white;

    z-index: 0;
    width: 100%;
    height: 100%;
    position: relative;
    border: $avatar-img-border;
    border-radius: $avatar-border-radius;
    background: $color-primary;
    box-shadow: $avi-img-box-shadow;
  }

  &-square {
    border-radius: $radius-sm;

    img {
      border-radius: $radius-sm;
    }

    &.c-avatar[data-status]::after {
      top: -2px;
      right: -2px;
    }
  }

  &[data-status]::after {
    content: '';
    top: 0;
    right: 0;
    z-index: 1;
    min-height: 8px;
    min-width: 8px;
    position: absolute;
    color: $color-white;
    background-clip: padding-box;
    border-radius: $radius-round;
    font-weight: $font-weight-semibold;
    /* stylelint-disable */
    box-shadow: 0 0 0 1px $color-white;
    /* stylelint-enable */
  }

  &[data-badge]::after {
    z-index: 1;
    top: 14.64%;
    right: 14.64%;
    line-height: 1.5;
    height: $space-md;
    text-align: center;
    position: absolute;
    white-space: nowrap;
    min-width: $space-md;
    font-size: $font-body-xs;
    content: attr(data-badge);
    background: $color-primary;
    border-radius: $radius-round;
    padding: $space-xxs $space-xs;
    transform: translate(50%, -50%);
    /* stylelint-disable */
    box-shadow: 0 0 0 1px $color-white;
    /* stylelint-enable */
  }

  &[data-text]::before {
    color: currentColor;
    content: attr(data-text);
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: 0;
  }
}

// All default Avatar color classes
@each $name, $hex in $avatar-palette {
  .c-avatar-#{$name} {
    background-color: $hex;
  }

  .c-avatar[data-status='#{$name}']::after {
    background-color: $hex;
  }
}

// All default Avatar size classes
@each $name, $size, $font-size in config($avatar-sizes) {
  .c-avatar-#{$name} {
    @include avatar-size($size, $font-size);

    &[data-status]::after {
      min-height: round($size / 4);
      min-width: round($size / 4);
    }
  }
}

// Extended Avatar color classes
@if $enable-extend-avatar-colors == true {
  @each $name, $hex in $extended-palette-light {
    .c-avatar-#{$name} {
      background-color: $hex;
      color: $color-gray-9;
    }
  }

  // Extended Avatar LIGHT color classes
  @each $name, $hex in $extended-palette {
    .c-avatar-#{$name} {
      background-color: $hex;
    }
  }
}

.c-avatar-group {
  z-index: 1;
  display: flex;
  position: relative;

  .c-avatar {
    margin-left: -$avatar-group-spacing;
    box-shadow: $space-0 $space-0 $space-0 1px $color-white;
    transition: margin $avatar-group-transition;

    &:first-of-type {
      margin-left: $space-0;
      z-index: 5;
    }

    &:nth-of-type(2) {
      z-index: 4;
    }

    &:nth-of-type(3) {
      z-index: 3;
    }

    &:nth-of-type(4) {
      z-index: 2;
    }

    &:nth-of-type(5) {
      z-index: 1;
    }
  }

  &:hover {
    .c-avatar:not(:first-of-type) {
      margin-left: $avatar-group-spacing;
    }
  }
}

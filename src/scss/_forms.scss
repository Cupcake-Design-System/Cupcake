.#{$form-prefix}-label {
  @include label;
}

.#{$form-prefix} {
  @include input;

  &-right-icon {
    padding-right: $control-icon-padding;
  }

  .#{$form-prefix}-icon + & {
    padding-left: $control-icon-padding;
  }
}

.#{$form-prefix}-icon {
  @include vertical-center;

  left: $control-padding;
  color: $control-icon-color;

  .#{$form-prefix} ~ & {
    left: auto;
    right: $control-padding;
  }
}

textarea.#{$form-prefix} {
  height: auto;
}


@each $name, $color, $bg in $control-colors {
  .#{$form-prefix}-#{$name} {
    &,
    &:hover {
      border-color: $color;

      @if $bg {
        background-color: $bg;
      }
    }

    &:focus {
      @if $bg {
        border-color: $color;
        background-color: $control-background;
      } @else {
        border-color: $control-active-border;
      }
    }

    & ~ .#{$form-prefix}-icon {
      color: $color;
    }
  }
}

@each $ng-state, $color in $control-ng-validation {
  .c-ng-validate.ng-dirty.#{$ng-state},
  .c-ng-validate-form .ng-dirty.#{$ng-state} {
    @extend .#{$form-prefix}-#{$color};
  }
}

@each $name, $height, $padding, $font-size in config($control-sizes) {
  .#{$form-prefix}-#{$name},
  .#{$form-prefix}-label-#{$name} {
    font-size: $font-size;
    padding: $padding;
  }

  .#{$form-prefix}-#{$name} {
    height: $height;
  }

  .#{$form-prefix}-label-#{$name} {
    padding-left: $space-0;
    padding-right: $space-0;
  }
}

.#{$form-prefix}-addon {
  display: flex;
  align-items: center; // vertically align all child elements
  padding: $space-0 $control-padding;
  font-size: $control-font-size;
  border: 1px solid $control-border;
  background-color: $control-addon-background;

  &:first-child {
    border-radius: $radius-sm $radius-0 $radius-0 $radius-sm;
  }

  &:last-child {
    margin-right: $space-0;
    border-left: $space-0;
    border-radius: $radius-0 $radius-sm $radius-sm $radius-0;
  }
}

.c-form-element {
  position: relative;
  padding: $control-element-padding;

  .c-label:first-child {
    padding: $control-element-label-padding;
  }
}

.c-fieldset {
  &,
  &.c-list {
    display: block;
    width: 100%;
    margin: $control-padding $space-0;
    padding: $space-0;
    border: 0;
  }

  &-legend {
    @include label;
    /* stylelint-disable */
    padding: 0.3em 0;
    /* stylelint-enable */
  }

  &:disabled,
  &-disabled {
    .#{$form-prefix} {
      @include input-disabled;
    }
  }
}

.c-hint {
  position: absolute;
  transform: scale(.8);
  transform-origin: top left;
  margin-top: $control-padding;
  color: $control-hint-color;
  font-size: $control-hint-font-size;
  opacity: 0;
  pointer-events: none;
  transition: $control-hint-transition;

  &-static,
  .#{$form-prefix}:focus ~ & {
    transform: scale(.9);
    opacity: 1;
  }
}

@each $name, $color in $control-colors {
  .c-hint-#{$name} {
    color: $color;
  }
}


// INPUT GROUP
.#{$form-prefix}-group {
  display: flex;

  .c-btn,
  .#{$form-prefix}-addon,
  .#{$form-prefix}-container {
    &:not(:first-child) {
       /* stylelint-disable */
      margin-left: -1px;
       /* stylelint-enable */
    }
  }

  .#{$form-prefix}-container {
    z-index: 1;

    &:hover,
    &:focus,
    &:active {
      z-index: 1;
    }
  }

  .c-btn {
    &:focus,
    &:active {
      z-index: 2;
    }

    &:first-child {
      border-top-right-radius: $radius-0;
      border-bottom-right-radius: $radius-0;
    }

    &:last-child {
      border-top-left-radius: $radius-0;
      border-bottom-left-radius: $radius-0;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: $radius-0;
    }
  }

  .#{$form-prefix}-container {
    flex: 1 0 auto;

    &-fixed {
      flex: 0 1 auto;
    }

    // .#{$form-prefix} {
    //   height: 100%;
    // }

    &:first-child .#{$form-prefix} {
      border-top-right-radius: $radius-0;
      border-bottom-right-radius: $radius-0;
    }

    &:last-child .#{$form-prefix} {
      border-top-left-radius: $radius-0;
      border-bottom-left-radius: $radius-0;
    }

    &:not(:first-child):not(:last-child) .#{$form-prefix} {
      border-radius: $radius-0;
    }
  }
}

.#{$form-prefix}-group-stacked {
  display: flex;
  flex-wrap: wrap;

  .c-btn,
  .#{$form-prefix}-addon,
  .#{$form-prefix}-container {
    &:not(:first-child) {
      margin-left: $space-0; // reset margin from .#{$form-prefix}-group
       /* stylelint-disable */
      margin-top: -1px;
       /* stylelint-enable */
    }
  }

  .#{$form-prefix}-container,
  .c-btn {
    flex: 0 0 100%;
    max-width: 100%;
    margin-left: $space-0;
  }

  .c-btn {
    &:not(:first-child):not(:last-child) {
      border-radius: $radius-0;
    }

    &:first-child {
      border-radius: $control-border-radius $control-border-radius $radius-0 $radius-0;
    }

    &:last-child {
      border-radius: $radius-0 $radius-0 $control-border-radius $control-border-radius;
    }
  }

  .#{$form-prefix}-container {
    &:not(:first-child):not(:last-child) .#{$form-prefix} {
      border-radius: $radius-0;
    }

    &:first-child .#{$form-prefix} {
      border-radius: $control-border-radius $control-border-radius $radius-0 $radius-0;
    }

    &:last-child .#{$form-prefix} {
      border-radius: $radius-0 $radius-0 $control-border-radius $control-border-radius;
    }
  }
}

.c-form-group {
  margin-bottom: $control-padding;
}

.#{$form-prefix}-results {
  .#{$form-prefix} {
    border-bottom-left-radius: $radius-0;
    border-bottom-right-radius: $radius-0;
  }

  &-menu {
    position: absolute;
    left: 0;
    right: 0;
    background: $color-white;
    box-shadow: 2px 5px 4px rgba(0, 0, 0, .05);
    border: 1px solid $color-gray-3;
    border-top: 0;
    list-style: none;
    margin-left: $space-0;
    border-bottom-left-radius: $radius-sm;
    border-bottom-right-radius: $radius-sm;

    li {
      padding: $space-sm;

      &:not(:last-child) {
        border-bottom: 1px solid $color-gray-3;
      }
    }
  }
}

